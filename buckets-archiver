#! /usr/bin/env bash
set -e


TO_ARCHIVE_TAG="to-archive"


function help() {
    echo """
usage: ENV=xxx ARCHIVE_BUCKET=xxx buckets-archiver archive

buckets-archiver archives S3 buckets tagged as 'to-archive'

For each of these buckets it moves its content to \${ARCHIVE_BUCKET}/\${BUCKET_NAME}/
and then deletes the S3 bucket.

Environment variables required:
- ENV, name of the environment, e.g. 'dev'
- ARCHIVE_BUCKET, S3 bucket name where the archived data will go, e.g.
  'dev-archived-buckets-data'

NOTE: This script uses awscli and will look for the AWS credentials the usual
way. Please refer to AWS documentation for more details:

https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html
"""
}


# Increase Concurrency?
#   https://docs.aws.amazon.com/cli/latest/topic/s3-config.html#max-concurrent-requests
#
# aws configure set default.s3.max_concurrent_requests 20

function main() {
    BUCKETS_ARNS="$(buckets_to_archive)"
    for bucket_arn in $BUCKETS_ARNS; do
        # Ignore buckets in a different environment
        if [[ ! ${bucket_arn} == arn:aws:s3:::${ENV}-* ]];
        then
            continue
        fi

        bucket_name=$(echo "${bucket_arn}" | sed 's/arn:aws:s3::://')

        echo
        log "About to archive '${bucket_name}' ..."
        echo
        sleep 3

        archive_bucket "$bucket_name"
    done
}


function buckets_to_archive {
    aws resourcegroupstaggingapi get-resources --resource-type-filters=s3 --tag-filters Key=${TO_ARCHIVE_TAG},Values=true | jq -r .ResourceTagMappingList[].ResourceARN
}


function archive_bucket() {
    bucket_name=$1

    log "Archiving '${bucket_name}' S3 bucket..."

    log "Moving data from '${bucket_name}' to '${ARCHIVE_BUCKET}'..."
    aws s3 mv --recursive "s3://${bucket_name}" "s3://${ARCHIVE_BUCKET}/${bucket_name}/"

    log "Deleting '${bucket_name}' S3 bucket..."
    aws s3 rb "s3://${bucket_name}"

    log "'${bucket_name}' S3 bucket archived."
}


function log() {
    msg=$1

    echo "[$(date -u)]  ${msg}"
}


# Show help when `ENV` or `ARCHIVE_BUCKET` are not set
if [[ -z $ENV || -z $ARCHIVE_BUCKET ]];
then
    help
    exit 1
fi

case "$1" in
  archive)  main ;;
  help)     help ;;
  *)        help ;;
esac
